(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{303:function(t,a,e){"use strict";e.r(a);var r=e(28),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("小程序的开发除去常见的原生小程序语法的开发模式，还可以应用层框架开发，用类现代框架 (vue/react) 的语法去开发小程序，提升开发体验和解决跨平台的问题。本文主要讲解如何用常见的小程序框架开发百度小程序。")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("由于开发者工具会 watch 项目文件修改，如果出现三方框架构建时变更大量文件而导致无法编译的情况，请尝试在三方框架的构建结束后重新打开项目。")]),t._v(" "),e("li",[t._v("当使用第三方框架生成百度小程序的代码带有 source-map 时，建议关闭第三方框架生成代码的配置；否则开启 source-map 可能会引起编译失败。")])])]),t._v(" "),e("h3",{attrs:{id:"taro"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#taro"}},[t._v("#")]),t._v(" Taro")]),t._v(" "),e("h4",{attrs:{id:"第一步-安装开发工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一步-安装开发工具"}},[t._v("#")]),t._v(" 第一步: 安装开发工具")]),t._v(" "),e("p",[t._v("安装 Taro 开发工具 "),e("code",[t._v("@tarojs/cli")]),t._v(";"),e("br"),t._v("\n使用 npm 或者 yarn 的方式都可以获取，也可以直接使用 npx(在 npm 5.2+ 下)")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ npm install -g @tarojs/cli\n    $ yarn global add @tarojs/cli\n\n")])])]),e("h4",{attrs:{id:"第二步-初始化项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二步-初始化项目"}},[t._v("#")]),t._v(" 第二步: 初始化项目")]),t._v(" "),e("p",[t._v("使用命令创建模板项目")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ taro init swan-taro\n")])])]),e("p",[t._v("也可以参考 "),e("a",{attrs:{href:"https://github.com/zhengjiaqi/taro-demo-swan",target:"_blank",rel:"noopener noreferrer"}},[t._v("Taro 开发百度小程序示例"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"第三步-安装依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三步-安装依赖"}},[t._v("#")]),t._v(" 第三步: 安装依赖")]),t._v(" "),e("p",[t._v("进入项目目录，安装依赖")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ npm install\n")])])]),e("h4",{attrs:{id:"第四步-构建目标代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四步-构建目标代码"}},[t._v("#")]),t._v(" 第四步: 构建目标代码")]),t._v(" "),e("blockquote",[e("p",[t._v("去掉 --watch 将不会监听文件修改，并会对代码进行压缩打包")])]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    # npm script\n    $ npm run dev:swan // 开发模式\n    $ npm run build:swan // 线上模式\n    # 仅限全局安装\n    $ taro build --type swan --watch\n    $ taro build --type swan\n")])])]),e("h4",{attrs:{id:"第四步-开发者工具打开项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四步-开发者工具打开项目"}},[t._v("#")]),t._v(" 第四步: 开发者工具打开项目")]),t._v(" "),e("p",[t._v("可以通过两种方式打开项目："),e("br"),t._v("\n方式一：使用开发者工具打开生成的 "),e("code",[t._v("dist")]),t._v(" 目录，进行调试、预览、上传，"),e("br"),t._v("\n方式二：使用 2.8.1 及以上版本开发者工具打开项目目录，同时进行以下配置，配置完成后，就可以在开发者工具中开发、调试、预览、上传。")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("npm run build:swan")])]),t._v(" "),e("li",[t._v("在 "),e("code",[t._v("project.swan.json")]),t._v("文件中增加配置 "),e("code",[t._v('"smartProgramRoot": "dist"')]),t._v("（如果已有此配置，请忽略）")]),t._v(" "),e("li",[t._v("在项目信息面板中设置如下自定义预处理指令。\n"),e("ul",[e("li",[t._v("编译前预处理: "),e("code",[t._v("npm run dev:swan")]),t._v(" 并勾选 "),e("strong",[t._v("异步执行")])]),t._v(" "),e("li",[t._v("上传前预处理: "),e("code",[t._v("npm run build:swan")])])])]),t._v(" "),e("li",[t._v("重新打开项目")])]),t._v(" "),e("h3",{attrs:{id:"mpvue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mpvue"}},[t._v("#")]),t._v(" mpvue")]),t._v(" "),e("h4",{attrs:{id:"第一步-初始化项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一步-初始化项目"}},[t._v("#")]),t._v(" 第一步: 初始化项目")]),t._v(" "),e("p",[t._v("使用示例项目:")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ git clone git@github.com:hucq/mpvue-platform-sample.git\n")])])]),e("p",[t._v("也可以参考 "),e("a",{attrs:{href:"https://github.com/zhengjiaqi/mpvue-demo-swan",target:"_blank",rel:"noopener noreferrer"}},[t._v("mpvue 开发百度小程序示例"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"第二步-安装依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二步-安装依赖"}},[t._v("#")]),t._v(" 第二步: 安装依赖")]),t._v(" "),e("p",[t._v("进入项目目录，安装依赖")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ npm install\n    $ npm install mpvue@beta mpvue-loader@beta mpvue-template-compiler@beta\n")])])]),e("h4",{attrs:{id:"第三步-构建目标代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三步-构建目标代码"}},[t._v("#")]),t._v(" 第三步: 构建目标代码")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ npm run dev:swan  // 开发模式\n    $ npm run build:swan // 线上模式\n")])])]),e("h4",{attrs:{id:"第四步-开发者工具打开项目-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四步-开发者工具打开项目-2"}},[t._v("#")]),t._v(" 第四步: 开发者工具打开项目")]),t._v(" "),e("p",[t._v("可以通过两种方式打开项目："),e("br"),t._v("\n方式一：使用开发者工具打开生成的 "),e("code",[t._v("dist/swan")]),t._v(" 目录，进行调试、预览、上传，"),e("br"),t._v("\n方式二：使用 2.8.1 及以上版本开发者工具打开项目目录，同时进行以下配置，配置完成后，就可以在开发者工具中开发、调试、预览、上传。")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("npm run build:swan")])]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("project.swan.json")]),t._v("文件中增加配置 "),e("code",[t._v('"smartProgramRoot": "dist/swan"')]),t._v("（如果已有此配置，请忽略）")]),t._v(" "),e("li",[t._v("在项目信息面板中设置如下自定义预处理指令。\n"),e("ul",[e("li",[t._v("编译前预处理: "),e("code",[t._v("npm run dev:swan")]),t._v(" 并勾选 "),e("strong",[t._v("异步执行")])]),t._v(" "),e("li",[t._v("上传前预处理: "),e("code",[t._v("npm run build:swan")])])])]),t._v(" "),e("li",[t._v("点击编译按钮")])]),t._v(" "),e("h3",{attrs:{id:"wepy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wepy"}},[t._v("#")]),t._v(" WePY")]),t._v(" "),e("h4",{attrs:{id:"第一步-安装开发工具-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一步-安装开发工具-2"}},[t._v("#")]),t._v(" 第一步: 安装开发工具")]),t._v(" "),e("p",[t._v("安装WePY开发工具 "),e("code",[t._v("wepy-cli")]),t._v(";")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ npm install -g wepy-cli@1.7.3-alpha6\n\n")])])]),e("h4",{attrs:{id:"第二步-初始化项目-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二步-初始化项目-2"}},[t._v("#")]),t._v(" 第二步: 初始化项目")]),t._v(" "),e("p",[t._v("使用命令创建模板项目")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ wepy init standard\n")])])]),e("p",[t._v("也可以参考 "),e("a",{attrs:{href:"https://github.com/qianliu013/swan-wepy-todo-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("WePY 开发百度小程序示例"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"第三步-安装依赖-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三步-安装依赖-2"}},[t._v("#")]),t._v(" 第三步: 安装依赖")]),t._v(" "),e("p",[t._v("进入项目目录，安装依赖")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    $ npm install\n")])])]),e("h4",{attrs:{id:"第四步-构建目标代码-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四步-构建目标代码-2"}},[t._v("#")]),t._v(" 第四步: 构建目标代码")]),t._v(" "),e("p",[t._v("注：去掉 --watch 将不会监听文件修改，并会对代码进行压缩打包")]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    # 仅限全局安装\n    $ wepy build -o baidu --watch\n    $ wepy build -o baidu\n")])])]),e("h4",{attrs:{id:"第五步-开发者工具预览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第五步-开发者工具预览"}},[t._v("#")]),t._v(" 第五步: 开发者工具预览")]),t._v(" "),e("p",[t._v("在百度开发者工具中选择打开项目目录下的"),e("code",[t._v("dist")]),t._v("目录，就可以在开发者工具中预览项目。")]),t._v(" "),e("h3",{attrs:{id:"okam"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#okam"}},[t._v("#")]),t._v(" Okam")]),t._v(" "),e("h4",{attrs:{id:"第一步：安装-cli-工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一步：安装-cli-工具"}},[t._v("#")]),t._v(" 第一步：安装 CLI 工具")]),t._v(" "),e("ul",[e("li",[t._v("Node 安装（要求 "),e("code",[t._v("Node >=8 && NPM >= 3")]),t._v("），具体安装可以到"),e("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网下载"),e("OutboundLink")],1),t._v("；")]),t._v(" "),e("li",[t._v("CLI 工具安装:")])]),t._v(" "),e("CodeTabContent",{attrs:{name:"TEXT"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install okam-cli -g\n")])])]),e("h4",{attrs:{id:"第二步：初始化项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二步：初始化项目"}},[t._v("#")]),t._v(" 第二步：初始化项目")]),t._v(" "),e("CodeTabContent",{attrs:{name:"SHELL"}},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("okam init my-project\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-project\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),e("h4",{attrs:{id:"第三步：构建目标代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三步：构建目标代码"}},[t._v("#")]),t._v(" 第三步：构建目标代码")]),t._v(" "),e("div",{staticClass:"table-wrap"},[e("table",[e("thead",[e("tr",[e("th",[t._v("代码")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("npm run dev")])]),t._v(" "),e("td",[t._v("带 watch 开发模式")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("npm run dev:clean")])]),t._v(" "),e("td",[t._v("删掉构建产物（不包括项目配置文件）并重新构建且带 watch 开发模式")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("npm run dev:server")])]),t._v(" "),e("td",[t._v("带 watch && 开发 Server 开发模式")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("npm run build")])]),t._v(" "),e("td",[t._v("删掉构建重新构建（没有 watch && 开发 Server）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("npm run prod")])]),t._v(" "),e("td",[t._v("生产环境构建")])])])])]),t._v(" "),e("h4",{attrs:{id:"第四步-开发者工具打开项目-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四步-开发者工具打开项目-3"}},[t._v("#")]),t._v(" 第四步: 开发者工具打开项目")]),t._v(" "),e("p",[t._v("可以通过两种方式打开项目："),e("br"),t._v("\n方式一：使用开发者工具打开生成的 "),e("code",[t._v("dist")]),t._v(" 目录，进行调试、预览、上传，"),e("br"),t._v("\n方式二：使用 2.8.1 及以上版本开发者工具打开项目目录，同时进行以下配置，配置完成后，就可以在开发者工具中开发、调试、预览、上传。")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("npm run prod")])]),t._v(" "),e("li",[t._v("在 "),e("code",[t._v("project.swan.json")]),t._v("文件中增加配置 "),e("code",[t._v('"smartProgramRoot": "dist"')]),t._v("（如果已有此配置，请忽略）")]),t._v(" "),e("li",[t._v("在项目信息面板中设置如下自定义预处理指令。\n"),e("ul",[e("li",[t._v("编译前预处理: "),e("code",[t._v("npm run dev")]),t._v(" 并勾选 "),e("strong",[t._v("异步执行")])]),t._v(" "),e("li",[t._v("上传前预处理: "),e("code",[t._v("npm run prod")])])])]),t._v(" "),e("li",[t._v("点击编译按钮")])]),t._v(" "),e("p",[t._v("更多关于 "),e("code",[t._v("Okam")]),t._v(" 使用，可以参考 "),e("a",{attrs:{href:"https://ecomfe.github.io/okam",target:"_blank",rel:"noopener noreferrer"}},[t._v("Okam 文档"),e("OutboundLink")],1),t._v("。")])],1)}),[],!1,null,null,null);a.default=v.exports}}]);